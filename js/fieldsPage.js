var jsonVar = [];
var sectionObj = {};
var jsTreeDataArray = [];
var sectionObjArray = [];
var mysqlScriptString = '';
var dbModelString = '';

$(document).ready(function(){
    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-full-width",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "2000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    };

    new ClipboardJS('#copy-json');
    new ClipboardJS('#copy-sql');

    $('#sub-types').hide();
});

$(document).on('change', 'input[name="element-type"]', function(){
    var value = $(this).val();
    if(value == 'select' || value == 'checkboxgroup' || value == 'radio') {
        $('#sub-types').show();
        $('#element-input-type-div').hide();
    } else {
        $('#sub-types').hide();
        $('#element-input-type-div').show();
    }
});

$(document).on('click', '#add-sub-type', function(){
    var myvar = '<div class="row mt-2">'+
    '<input type="text" name="label" class="form-control col-md-5" placeholder="label"/>'+
    '<input type="text" name="value" class="form-control col-md-5 ml-2" placeholder="value"/>'+
    '<button type="button" class="btn btn-danger btn-sm col-md-1 remove-this-btn ml-2"><ion-icon name="close"></ion-icon></button>'+
    '</div>';

    $('#sub-type-body').append(myvar);
});

$(document).on('change', 'input[type=radio][name="autoGeneratedElementAttributeFormat"]', function(){
    var autoGeneratedElementAttributeFormatValue = $(this).val();
    var label = $('#element-label').val();

    if(autoGeneratedElementAttributeFormatValue === '1') {
        $('#element-attribute').val(toTitleCase(label).replace(/ /g,""));
    } else if(autoGeneratedElementAttributeFormatValue === '2') {
        $('#element-attribute').val(label.toLowerCase().replace(/ /g,"_"));
    } else if(autoGeneratedElementAttributeFormatValue === '3') {
        $('#element-attribute').val(
            label.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, function(match, chr)
            {
                return chr.toUpperCase();
            })
        );
    } else if(autoGeneratedElementAttributeFormatValue === '4') {
        $('#element-attribute').val(toTitleCase(label).replace(/ /g,"_"));
    }
});

$(document).on('click', '#clear-btn', function(){
    $('#section-id').val('');
    $('#section-header').val('');
    $('#jsonContainer').text('');
    clearForm();
});

$(document).on('click', '.remove-this-btn', function(){
    $(this).parent().remove();
});

$(document).on('blur', '#element-label', function(){
    if($(this).val() != '') {
        var label = $(this).val().replace(/[\. ,:-]+/g, " ");

        $(this).val(toTitleCase(label));
        
        var autoGeneratedElementAttributeFormatValue = $('input[type="radio"][name="autoGeneratedElementAttributeFormat"]:checked').val();
        
        if(autoGeneratedElementAttributeFormatValue === '1') {
            $('#element-attribute').val(toTitleCase(label).replace(/ /g,""));
        } else if(autoGeneratedElementAttributeFormatValue === '2') {
            $('#element-attribute').val(label.toLowerCase().replace(/ /g,"_"));
        } else if(autoGeneratedElementAttributeFormatValue === '3') {
            $('#element-attribute').val(
                label.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, function(match, chr)
                {
                    return chr.toUpperCase();
                })
            );
        } else if(autoGeneratedElementAttributeFormatValue === '4') {
            $('#element-attribute').val(toTitleCase(label).replace(/ /g,"_"));
        }
    }
});

$(document).on('blur', '#section-header', function(){
    var label = $(this).val().replace(/[\. ,:-]+/g, " ");
    $(this).val(toTitleCase(label));
});

$(document).on('blur', 'input[name="label"]', function(){
    if($(this).val() != '') {
        var label = $(this).val().replace(/[\. ,:-]+/g, " ");
        $(this).val(toTitleCase(label));

        $(this).siblings('input[name="value"]').val($(this).val().toUpperCase().replace(/[\. ,:-]+/g,"_"));
    }
});

$(document).on('click', '#gen-json-btn', function(){
    if($('#element-label').val() === '' || $('#element-attribute').val() === '') {
        toastr["error"]("Missing Field", "Error");
        return;
    }

    if($('#section-header').val() === '') {
        toastr["error"]("Missing Field - Section Header", "Error");
        return;
    }

    if(sectionObj.section_id == undefined) {
        sectionObj.section_id = $('#section-id').val() != '' ? $('#section-id').val() : generateUUID();
    }
    sectionObj.section_header = $('#section-header').val();
    sectionObj.section_elements = [];

    var fieldType = $('input[name="element-type"]:checked').val();
    var attribute = $('#element-attribute').val();

    var id = generateUUID();

    var fieldJSONObj = {
        id : id,
        label : $('#element-label').val(),
        attribute : attribute,
        classes: $('#element-classes').val(),
        parent_id : null,
        field : fieldType,
        inputType : fieldType == 'text' ? $('input[name="element-input-type"]:checked').val() : null,
        rendered : $('#element-rendered').prop('checked'),
        options : getSubTypesJSObj(fieldType),
        required : $('#element-required').prop('checked'),
        readonly : $('#element-read-only').prop('checked'),
        disabled : $('#element-disabled').prop('checked'),
        placeholder : $('#element-placeholder').val(),
        error_text : $('#element-error-text').val(),
        help_text: $('#element-help-text').val(),
        style: $('#element-style-outer').val()
    }

    if(fieldType === 'text' || fieldType === 'textarea' || fieldType === 'hiddentext') {
        fieldJSONObj.value = $('#element-default').val();
    } else if(fieldType === 'checkbox') {
        fieldJSONObj.checked = false;
    }

    jsonVar.push(fieldJSONObj);

    sectionObj.section_elements = jsonVar;

    // $('#jsonContainer').text(JSON.stringify(jsonVar, undefined, 2));
    $('#jsonContainer').text(JSON.stringify(sectionObj, undefined, 2));
    toastr["success"]("Field added to JSON", "Success");

    if(fieldType == 'radio' || fieldType == 'checkboxgroup' || fieldType == 'select') {
        $('#field-list').append($("<option></option>").attr("value",id).text($('#element-label').val()));
    }
    $('#connected-field').append($("<option></option>").attr("value",id).text($('#element-label').val()));
    clearForm();

    // add the attribute to the mysql generator
    $('#field').append($("<option></option>").attr("value",attribute).text(attribute));
});

// SQL generation js
$(document).on('change', '#type', function() {
    var typeValue = $(this).val();
    var fieldLength = '';

    if(typeValue === 'VARCHAR') {
        fieldLength = '255';
    } else if(typeValue === 'TEXT') {
        fieldLength = '';
    } else if(typeValue === 'INT') {
        fieldLength = '10';
    } else if(typeValue === 'TINYINT') {
        fieldLength = '1';
        $('#allownull').attr('checked', false);
        $('#default').val('0');
    } else if(typeValue === 'DECIMAL') {
        fieldLength = '10,2';
    } else if(typeValue === 'DATE') {
        fieldLength = '';
        $('#allownull').attr('checked', true);
        $('#default').val('NULL');
    } else if(typeValue === 'DATETIME') {
        fieldLength = '';
        $('#allownull').attr('checked', true);
        $('#default').val('NULL');
    }
    $('#length').val(fieldLength);
});

$(document).on('change', '#allownull', function(){
    if($(this).prop('checked')) {
        $('#default').val('NULL');
    } else {
        // set default value based on the type of the field
        var typeValue = $('#type').val();
        if(typeValue === 'VARCHAR') {
            $('#default').val('');
        } else if(typeValue === 'TEXT') {
            $('#default').val('');
        } else if(typeValue === 'INT') {
            $('#default').val('0');
        } else if(typeValue === 'TINYINT') {
            $('#default').val('0');
        } else if(typeValue === 'DECIMAL') {
            $('#default').val('0.00');
        } else if(typeValue === 'DATE') {
            $('#default').val('NULL');
        } else if(typeValue === 'DATETIME') {
            $('#default').val('NULL');
        }
    }
});

$(document).on('click', '#gen-sql-btn', function(){
    var addColumnString = 'ADD COLUMN ';

    var fieldName = $('#field').val();
    var fieldType = $('#type').val();
    var fieldLength = $('#length').val();
    var fieldDefault = $('#default').val();

    addColumnString += fieldName + ' ';
    addColumnString += fieldType;
    addColumnString += fieldLength === '' ? fieldLength : '(' + fieldLength + ')';

    if($('#allownull').prop('checked')){
        addColumnString += ' DEFAULT NULL';
    } else {
        addColumnString += ' NOT NULL DEFAULT ' + fieldDefault;
    }

    addColumnString += ', \n';

    if(mysqlScriptString === '') {
        mysqlScriptString = $('#table').val() + ' \n';
    }

    mysqlScriptString += addColumnString;
    dbModelString += getDbModelValue(fieldName, fieldType) + '\n';

    $('#sqlContainer').val(mysqlScriptString);
    $('#modelContainer').val(dbModelString);
});

function generateUUID() {
    var d = new Date().getTime();
    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = (d + Math.random()*16)%16 | 0;
        d = Math.floor(d/16);
        return (c=='x' ? r : (r&0x3|0x8)).toString(16);
    });
    return uuid;
}

function getSubTypesJSObj(element) {
    var subTypes = [];
    if(element == 'select') {
        $('div#sub-type-body div.row').each(function(){
            var order = $(this).children('input[name="order"]').val();
            subTypes.push({
                id : generateUUID(),
                label : $(this).children('input[name="label"]').val(),
                value : $(this).children('input[name="value"]').val(),
                order : order != undefined ? parseInt(order) : 0,
                on_check : null,
                selected: $(this).children('input[name="default"]').prop('checked')
            });
        });
    } else if(element == 'checkboxgroup' || element == 'radio') {
        $('div#sub-type-body div.row').each(function(){
            var order = $(this).children('input[name="order"]').val();
            subTypes.push({
                id : generateUUID(),
                label : $(this).children('input[name="label"]').val(),
                value : $(this).children('input[name="value"]').val(),
                order : order != undefined ? parseInt(order) : 0,
                on_check : null,
                checked: $(this).children('input[name="default"]').prop('checked')
            });
        });
    }
    return subTypes;
}

function clearForm() {
    $('#element-label').val('');
    $('#element-attribute').val('');
    $('#element-placeholder').val('');
    $('#element-default').val('');
    $('#element-error-text').val('');
    $('#element-classes').val('');
    $('#element-required').prop('checked', false);
    $('#element-read-only').prop('checked', false);
    $('#element-disabled').prop('checked', false);
    $('div#sub-type-body div.row').each(function(){
        $(this).remove();
    });
    $('#radio1').prop('checked', true);
    $('#radio9').prop('checked', true);
    $('#sub-types').hide();
    $('#element-input-type-div').show();
}

function toTitleCase(str) {
    return str.replace(/(?:^|\s)\w/g, function(match) {
        return match.toUpperCase();
    });
}

function getDbModelValue(field, type) {
    var modelType;
    if(type === 'VARCHAR') {
        modelType = 'type.STRING,';
    } else if(type === 'TEXT') {
        modelType = 'type.TEXT,';
    } else if(type === 'INT') {
        modelType = 'type.INTEGER,';
    } else if(type === 'TINYINT') {
        modelType = 'type.BOOLEAN,';
    } else if(type === 'DECIMAL') {
        modelType = 'type.DECIMAL(10,2),';
    } else if(type === 'DATE') {
        modelType = 'type.DATEONLY,';
    } else if(type === 'DATETIME') {
        modelType = 'type.DATE,';
    }
    return field + ': ' + modelType;
}